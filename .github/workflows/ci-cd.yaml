name: Java CI/CD Pipeline without SonarQube

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Grant execute permission for Gradle
        run: chmod +x ./gradlew
        working-directory: ./demo

      - name: Build with Gradle
        run: ./gradlew build
        working-directory: ./demo

      - name: Run tests
        run: ./gradlew test
        working-directory: ./demo

      - name: Build Docker image
        run: docker build . -t ${{ secrets.DOCKER_USERNAME }}/my-spring-boot-app:${{ github.sha }}
        working-directory: ./demo

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Docker image to Docker Hub
        run: docker push ${{ secrets.DOCKER_USERNAME }}/my-spring-boot-app:${{ github.sha }}
        working-directory: ./demo

  deploy:
    needs: build-and-test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-central-1

      - name: Update kubeconfig
        run: aws eks update-kubeconfig --region eu-central-1 --name video-streaming-eks-cluster

      - name: Print the current Kubernetes context
        run: |
          kubectl config get-contexts
          kubectl config current-context

      - name: Deploy to Kubernetes
        run: |
          kubectl get nodes
          kubectl apply -f k8s/
          kubectl rollout status deployment/my-spring-boot-app-deployment
          kubectl get all -n default

      - name: Verify AWS Auth token
        run: |
          aws eks get-token --region eu-central-1 --cluster-name video-streaming-eks-cluster | jq -r '.status.token'
          aws eks get-token --region eu-central-1 --cluster-name video-streaming-eks-cluster | jq -r '.status.expirationTimestamp'
