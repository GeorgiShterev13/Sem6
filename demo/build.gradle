plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.5'
	id 'io.spring.dependency-management' version '1.1.4'
	id "org.sonarqube" version "5.0.0.4638"
	id 'jacoco' // Apply the jacoco plugin, a core Gradle plugin
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

sonar {
	properties {
		property "sonar.projectKey", "Semester-6-Project"
		property "sonar.projectName", "Semester 6 Project"
		property "sonar.host.url", System.getenv('SONAR_HOST_URL') ?: 'http://localhost:9000'
		property "sonar.login", System.getenv('SONAR_TOKEN')
		property 'sonar.token', 'sqp_eea5374dc8d5d6fe5a30732c5ab3e9422e011dd9'
		property 'sonar.coverage.jacoco.xmlReportPaths', 'build/reports/jacoco/test/jacocoTestReport.xml'
	}
}

jacocoTestReport {
	reports {
		xml.required.set(true)
		html.required.set(true) // Enable HTML report as well, if needed
	}
}
test.finalizedBy jacocoTestReport

// To ensure the JaCoCo test report is always created when we run the sonarqube task
// Letâ€™s setup the following dependsOn relationship:
tasks.named('sonarqube').configure {
	dependsOn test
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-amqp'
	implementation 'org.springframework.boot:spring-boot-starter-data-rest'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	developmentOnly 'org.springframework.boot:spring-boot-docker-compose'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.0'
	testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.0'
	testImplementation 'org.springframework.amqp:spring-rabbit-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	implementation 'javax.validation:validation-api:2.0.1.Final'
}

tasks.named('test') {
	useJUnitPlatform()
}
